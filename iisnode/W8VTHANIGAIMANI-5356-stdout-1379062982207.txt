info: socket.io started
========================================================================================
=  Please ensure that you set the default write concern for the database by setting    =
=   one of the options                                                                 =
=                                                                                      =
=     w: (value of > -1 or the string 'majority'), where < 1 means                     =
=        no write acknowlegement                                                       =
=     journal: true/false, wait for flush to journal before acknowlegement             =
=     fsync: true/false, wait for flush to file system before acknowlegement           =
=                                                                                      =
=  For backward compatibility safe is still supported and                              =
=   allows values of [true | false | {j:true} | {w:n, wtimeout:n} | {fsync:true}]      =
=   the default value is false which means the driver receives does not                =
=   return the information of the success/error of the insert/update/remove            =
=                                                                                      =
=   ex: new Db(new Server('localhost', 27017), {safe:false})                           =
=                                                                                      =
=   http://www.mongodb.org/display/DOCS/getLastError+Command                           =
=                                                                                      =
=  The default of no acknowlegement will change in the very near future                =
=                                                                                      =
=  This message will disappear when the default safe is set on the driver Db           =
========================================================================================
warn: error raised: Error: listen EADDRINUSE
var app = angular.module("tt", []);
app.controller('master', ["$scope", "$http", function ($scope, $http) {
    $scope.player1 = players[0] || { name: "Narayanan", points: 0, profileImage: "/images/men.jpg" };
    $scope.player2 = players[1] || { name: "Rajkumar", points: 0, profileImage: "/images/men.jpg" };
    $scope.round = "Round 1";
    var socket = io.connect("http://" + location.host);
    socket.on('updateCount', function (e) {
        if (e === "player1") {
            if ($scope.player1.points < 11)
                $scope.player1.points++;
            else
                $scope.player1.points = "WIN";
        }
        else if (e === "player2") {
            if ($scope.player2.points < 11)
                $scope.player2.points++;
            else
                $scope.player2.points = "WIN";
        }
        $scope.$apply();
    });
    socket.on('negateCount', function (e) {
        if (e === "player1") {
            if ($scope.player1.points !== 0)
                $scope.player1.points--;
            else
                $scope.player1.points = 0;
        }
        else if (e === "player2") {
            if ($scope.player2.points !== 0)
                $scope.player2.points--;
            else
                $scope.player2.points = 0;
        }
        $scope.$apply();
    });


    socket.on('connected', function () {
        console.log('Congrats, you are connected successfully');
    });

    socket.on('updatePlayers', function (players) {
        alert("invoked updatePlayers" + players[0].profileImage);
        $scope.player1 = players[0];
        $scope.player2 = players[1];
        $scope.$apply();
    });
} ]);




/* admin.jade javascript */

rendered port number to client: 3000
connected to players tt-score-keeping db
